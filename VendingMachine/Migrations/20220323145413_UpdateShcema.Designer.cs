// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VendingMachine.Data;

#nullable disable

namespace VendingMachine.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    [Migration("20220323145413_UpdateShcema")]
    partial class UpdateShcema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "กรุงเทพ"
                        },
                        new
                        {
                            Id = "2",
                            Address = "ปทุมธานี"
                        },
                        new
                        {
                            Id = "3",
                            Address = "พระรามสาม"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("LocationId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            LocationId = "1",
                            Name = "M1"
                        },
                        new
                        {
                            Id = "2",
                            LocationId = "1",
                            Name = "M2"
                        },
                        new
                        {
                            Id = "3",
                            LocationId = "2",
                            Name = "C1"
                        },
                        new
                        {
                            Id = "4",
                            LocationId = "3",
                            Name = "C2"
                        },
                        new
                        {
                            Id = "5",
                            LocationId = "3",
                            Name = "C2"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MachineId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Quality")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64986310-8a27-4fa0-96d2-4d1d2f239b4b"),
                            MachineId = "1",
                            Name = "Coke",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("b5bbe0b3-2549-4d86-928c-ffd5ad0b21fd"),
                            MachineId = "1",
                            Name = "Pepsi",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("b3988913-67cd-44e4-a81f-8f36cb997ae8"),
                            MachineId = "1",
                            Name = "Coffee",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("aab9af01-9641-4237-8e8d-3fb0e7515d94"),
                            MachineId = "2",
                            Name = "Coke",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("c69ecebb-0654-4203-a4c8-76f1f8b9da41"),
                            MachineId = "2",
                            Name = "Pepsi",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("dc71fef5-2bc2-4887-8fa9-fdaef8f4a583"),
                            MachineId = "3",
                            Name = "Pepsi",
                            Price = 0.0,
                            Quality = 30
                        },
                        new
                        {
                            Id = new Guid("fc226d13-a1e7-40a9-ba26-931295a3d6e4"),
                            MachineId = "4",
                            Name = "Pepsi",
                            Price = 0.0,
                            Quality = 11
                        },
                        new
                        {
                            Id = new Guid("875014d3-afe7-46c8-bb92-4f95d21d907d"),
                            MachineId = "4",
                            Name = "Coffee",
                            Price = 0.0,
                            Quality = 12
                        },
                        new
                        {
                            Id = new Guid("b0de6bf6-c09c-453d-857c-94092cafc177"),
                            MachineId = "5",
                            Name = "Coffee",
                            Price = 0.0,
                            Quality = 10
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.HasOne("VendingMachine.Entities.Location", "Location")
                        .WithMany("Machines")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.HasOne("VendingMachine.Entities.Machine", "Machine")
                        .WithMany("Machines")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Navigation("Machines");
                });
#pragma warning restore 612, 618
        }
    }
}
