// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VendingMachine.Data;

#nullable disable

namespace VendingMachine.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    [Migration("20220323152740_UpdateMachine")]
    partial class UpdateMachine
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "กรุงเทพ"
                        },
                        new
                        {
                            Id = "2",
                            Address = "ปทุมธานี"
                        },
                        new
                        {
                            Id = "3",
                            Address = "พระรามสาม"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("LocationId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            LocationId = "1",
                            Name = "M1"
                        },
                        new
                        {
                            Id = "2",
                            LocationId = "1",
                            Name = "M2"
                        },
                        new
                        {
                            Id = "3",
                            LocationId = "2",
                            Name = "C1"
                        },
                        new
                        {
                            Id = "4",
                            LocationId = "3",
                            Name = "C2"
                        },
                        new
                        {
                            Id = "5",
                            LocationId = "3",
                            Name = "C2"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MachineId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Quality")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b710d38-cf74-47a3-885d-3d8227091a54"),
                            MachineId = "1",
                            Name = "Coke",
                            Price = 20.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("92ee1004-76f2-4784-8fdf-b90b091a175c"),
                            MachineId = "1",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("1b68033d-f3af-4145-b009-d17f8045dfcc"),
                            MachineId = "1",
                            Name = "Coffee",
                            Price = 60.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("36fbe764-f9b9-4c4c-9dad-3fe09a7b9bdc"),
                            MachineId = "2",
                            Name = "Coke",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("7e01b329-7daa-46cd-a1ff-debfcae43933"),
                            MachineId = "2",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("5705ffcb-45e5-4a40-9f4e-1ce3d955df5d"),
                            MachineId = "3",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 30
                        },
                        new
                        {
                            Id = new Guid("fb85263f-a207-4e0f-be80-284df72f1f5d"),
                            MachineId = "4",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 11
                        },
                        new
                        {
                            Id = new Guid("fb7b0e24-d6c5-488d-8b32-49bfc6caacf0"),
                            MachineId = "4",
                            Name = "Coffee",
                            Price = 60.0,
                            Quality = 12
                        },
                        new
                        {
                            Id = new Guid("3507d65a-64d8-432b-8125-4be340ae5c2d"),
                            MachineId = "5",
                            Name = "Coffee",
                            Price = 60.0,
                            Quality = 10
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.HasOne("VendingMachine.Entities.Location", "Location")
                        .WithMany("Machines")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.HasOne("VendingMachine.Entities.Machine", "Machine")
                        .WithMany("Products")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
