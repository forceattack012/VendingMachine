// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VendingMachine.Data;

#nullable disable

namespace VendingMachine.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    [Migration("20220324122012_addUserAndAdmin")]
    partial class addUserAndAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "กรุงเทพ"
                        },
                        new
                        {
                            Id = "2",
                            Address = "ปทุมธานี"
                        },
                        new
                        {
                            Id = "3",
                            Address = "พระรามสาม"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("LocationId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            LocationId = "1",
                            Name = "M1"
                        },
                        new
                        {
                            Id = "2",
                            LocationId = "1",
                            Name = "M2"
                        },
                        new
                        {
                            Id = "3",
                            LocationId = "2",
                            Name = "C1"
                        },
                        new
                        {
                            Id = "4",
                            LocationId = "3",
                            Name = "C2"
                        },
                        new
                        {
                            Id = "5",
                            LocationId = "3",
                            Name = "C2"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.MachineInventory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("MachineId")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<int>("Quality")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("ProductId");

                    b.ToTable("MachineInventory");

                    b.HasData(
                        new
                        {
                            Id = "5ccc8325-8781-4d66-99e5-27a5670fe6bb",
                            MachineId = "1",
                            ProductId = "P1",
                            Quality = 12
                        },
                        new
                        {
                            Id = "d01a6271-59a0-4300-9c40-5d3c41e19795",
                            MachineId = "1",
                            ProductId = "P2",
                            Quality = 10
                        },
                        new
                        {
                            Id = "4ad1bfcc-e5bd-4137-99df-cc7506e5fdd7",
                            MachineId = "1",
                            ProductId = "C1",
                            Quality = 20
                        },
                        new
                        {
                            Id = "05c8be66-7848-4918-816b-d2776b567b76",
                            MachineId = "1",
                            ProductId = "C2",
                            Quality = 14
                        },
                        new
                        {
                            Id = "f9fe51d9-6b0e-413a-ba51-f432e723297f",
                            MachineId = "2",
                            ProductId = "C2",
                            Quality = 11
                        },
                        new
                        {
                            Id = "bf468db4-4787-4656-bc58-4a03a1edf428",
                            MachineId = "3",
                            ProductId = "C1",
                            Quality = 11
                        },
                        new
                        {
                            Id = "c75209c6-8209-4169-8e5e-a3e54a680ec5",
                            MachineId = "3",
                            ProductId = "P1",
                            Quality = 10
                        },
                        new
                        {
                            Id = "2d68460a-d121-462e-b489-3e124f60a538",
                            MachineId = "4",
                            ProductId = "P1",
                            Quality = 12
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "P1",
                            Name = "Coke",
                            Price = 20.0
                        },
                        new
                        {
                            Id = "P2",
                            Name = "Pepsi",
                            Price = 10.0
                        },
                        new
                        {
                            Id = "C1",
                            Name = "Coffee",
                            Price = 60.0
                        },
                        new
                        {
                            Id = "C2",
                            Name = "Beer",
                            Price = 100.0
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Describetion")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Describetion = "Customer",
                            Type = "User"
                        },
                        new
                        {
                            Id = 2,
                            Describetion = "Admin",
                            Type = "Admin"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1234",
                            RoleId = 1,
                            UserName = "abcd1234@gmail.com"
                        },
                        new
                        {
                            Id = "2",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1234",
                            RoleId = 1,
                            UserName = "user@gmail.com"
                        },
                        new
                        {
                            Id = "3",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "admin1",
                            RoleId = 2,
                            UserName = "admin1@gmail.com"
                        },
                        new
                        {
                            Id = "4",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "admin2",
                            RoleId = 2,
                            UserName = "admin2@gmail.com"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.HasOne("VendingMachine.Entities.Location", "Location")
                        .WithMany("Machines")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VendingMachine.Entities.MachineInventory", b =>
                {
                    b.HasOne("VendingMachine.Entities.Machine", "Machine")
                        .WithMany("MachineInventories")
                        .HasForeignKey("MachineId");

                    b.HasOne("VendingMachine.Entities.Product", "Product")
                        .WithMany("MachineInventories")
                        .HasForeignKey("ProductId");

                    b.Navigation("Machine");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("VendingMachine.Entities.User", b =>
                {
                    b.HasOne("VendingMachine.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Navigation("MachineInventories");
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.Navigation("MachineInventories");
                });

            modelBuilder.Entity("VendingMachine.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
