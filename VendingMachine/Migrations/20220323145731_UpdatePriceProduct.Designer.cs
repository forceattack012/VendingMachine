// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VendingMachine.Data;

#nullable disable

namespace VendingMachine.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    [Migration("20220323145731_UpdatePriceProduct")]
    partial class UpdatePriceProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "กรุงเทพ"
                        },
                        new
                        {
                            Id = "2",
                            Address = "ปทุมธานี"
                        },
                        new
                        {
                            Id = "3",
                            Address = "พระรามสาม"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("LocationId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            LocationId = "1",
                            Name = "M1"
                        },
                        new
                        {
                            Id = "2",
                            LocationId = "1",
                            Name = "M2"
                        },
                        new
                        {
                            Id = "3",
                            LocationId = "2",
                            Name = "C1"
                        },
                        new
                        {
                            Id = "4",
                            LocationId = "3",
                            Name = "C2"
                        },
                        new
                        {
                            Id = "5",
                            LocationId = "3",
                            Name = "C2"
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MachineId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Quality")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e6972dc-5b82-47f9-aa2f-1d270e563bc9"),
                            MachineId = "1",
                            Name = "Coke",
                            Price = 20.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("c5d16e7a-749c-4f74-b883-5b40f751db45"),
                            MachineId = "1",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("961b02db-9e2b-49d1-8bca-e327ad1a4fd7"),
                            MachineId = "1",
                            Name = "Coffee",
                            Price = 60.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("cf3bc0b8-9f1c-4f71-9f16-75727e5e71be"),
                            MachineId = "2",
                            Name = "Coke",
                            Price = 0.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("d41d8ca6-c1cb-4882-b71e-162ffd0d90e9"),
                            MachineId = "2",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 20
                        },
                        new
                        {
                            Id = new Guid("7a0f7a59-975b-4317-86a4-619975e46f9e"),
                            MachineId = "3",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 30
                        },
                        new
                        {
                            Id = new Guid("3ebf064d-cdcc-4d4a-a9c9-db1aa55e8fad"),
                            MachineId = "4",
                            Name = "Pepsi",
                            Price = 10.0,
                            Quality = 11
                        },
                        new
                        {
                            Id = new Guid("26c116d7-f6c1-4cda-8253-0616fd4af167"),
                            MachineId = "4",
                            Name = "Coffee",
                            Price = 60.0,
                            Quality = 12
                        },
                        new
                        {
                            Id = new Guid("8851b0de-76c1-43b7-82d9-477b800f31ef"),
                            MachineId = "5",
                            Name = "Coffee",
                            Price = 60.0,
                            Quality = 10
                        });
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.HasOne("VendingMachine.Entities.Location", "Location")
                        .WithMany("Machines")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VendingMachine.Entities.Product", b =>
                {
                    b.HasOne("VendingMachine.Entities.Machine", "Machine")
                        .WithMany("Machines")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("VendingMachine.Entities.Location", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("VendingMachine.Entities.Machine", b =>
                {
                    b.Navigation("Machines");
                });
#pragma warning restore 612, 618
        }
    }
}
